{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h1 style={styles.title}>Weather Data</h1>\n\n//       <div style={styles.inputContainer}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//           style={styles.input}\n//         />\n//         <button onClick={fetchWeather} style={styles.button}>\n//           Get Weather\n//         </button>\n//       </div>\n\n//       {error && <p style={styles.error}>{error}</p>}\n//       {weather && (\n//         <div style={styles.result}>\n//           <h2>{weather.name}</h2>\n//           <p>Temperature: {weather.main.temp}°C</p>\n//           <p>Wind: {weather.wind.speed} m/s</p>\n//           <p>{weather.weather[0].description}</p>\n//         </div>\n//       )}\n\n//       <p style={styles.footer}>© Imax</p>\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: {\n//     backgroundColor: \"#c9baa6\",\n//     borderRadius: 20,\n//     padding: 40,\n//     maxWidth: 600,\n//     margin: \"50px auto\",\n//     textAlign: \"center\",\n//     boxShadow: \"0 4px 10px rgba(0,0,0,0.2)\",\n//   },\n//   title: { color: \"#0d2c4b\", textDecoration: \"underline\" },\n//   inputContainer: { margin: \"20px 0\" },\n//   input: {\n//     padding: 10,\n//     width: 250,\n//     borderRadius: 15,\n//     border: \"2px solid #000\",\n//     marginRight: 10,\n//   },\n//   button: {\n//     padding: \"10px 15px\",\n//     borderRadius: 15,\n//     border: \"2px solid #000\",\n//     backgroundColor: \"#b5d3e7\",\n//     cursor: \"pointer\",\n//   },\n//   result: { marginTop: 20 },\n//   error: { color: \"red\" },\n//   footer: { marginTop: 30, color: \"#777\" },\n// };\n\n// export default Hero;","map":{"version":3,"names":[],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h1 style={styles.title}>Weather Data</h1>\r\n\r\n//       <div style={styles.inputContainer}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//           style={styles.input}\r\n//         />\r\n//         <button onClick={fetchWeather} style={styles.button}>\r\n//           Get Weather\r\n//         </button>\r\n//       </div>\r\n\r\n//       {error && <p style={styles.error}>{error}</p>}\r\n//       {weather && (\r\n//         <div style={styles.result}>\r\n//           <h2>{weather.name}</h2>\r\n//           <p>Temperature: {weather.main.temp}°C</p>\r\n//           <p>Wind: {weather.wind.speed} m/s</p>\r\n//           <p>{weather.weather[0].description}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       <p style={styles.footer}>© Imax</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: {\r\n//     backgroundColor: \"#c9baa6\",\r\n//     borderRadius: 20,\r\n//     padding: 40,\r\n//     maxWidth: 600,\r\n//     margin: \"50px auto\",\r\n//     textAlign: \"center\",\r\n//     boxShadow: \"0 4px 10px rgba(0,0,0,0.2)\",\r\n//   },\r\n//   title: { color: \"#0d2c4b\", textDecoration: \"underline\" },\r\n//   inputContainer: { margin: \"20px 0\" },\r\n//   input: {\r\n//     padding: 10,\r\n//     width: 250,\r\n//     borderRadius: 15,\r\n//     border: \"2px solid #000\",\r\n//     marginRight: 10,\r\n//   },\r\n//   button: {\r\n//     padding: \"10px 15px\",\r\n//     borderRadius: 15,\r\n//     border: \"2px solid #000\",\r\n//     backgroundColor: \"#b5d3e7\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   result: { marginTop: 20 },\r\n//   error: { color: \"red\" },\r\n//   footer: { marginTop: 30, color: \"#777\" },\r\n// };\r\n\r\n// export default Hero;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
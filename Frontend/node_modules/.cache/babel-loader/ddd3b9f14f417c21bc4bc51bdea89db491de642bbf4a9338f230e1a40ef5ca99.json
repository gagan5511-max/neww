{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\hero.js\",\n  _s = $RefreshSig$();\n// function Hero(){\n\n// // const [city, setCity]=useState(\"pune\");\n\n//     return(\n//         <>\n//         <input  onChange={''} type=\"text\" placeholder=\"Search Location \" />\n//         <button onClick={''} > Get Weather </button>\n//         <h2> City : Delhi </h2>\n//         <h4> Wind Speed :  </h4>\n//         </>\n//     );\n// }\n// export default Hero;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Hero() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const handleChange = e => {\n    setCity(e.target.value);\n  };\n  const getWeather = async () => {\n    if (!city) {\n      alert(\"Please enter a city name!\");\n      return;\n    }\n    try {\n      const apiKey = \"YOUR_API_KEY\"; // replace with your real key\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);\n      setWeather(response.data);\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather:\", error);\n      alert(\"City not found or API error!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Location\",\n      onChange: handleChange,\n      value: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"City: \", weather.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Temperature: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Wind Speed: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Condition: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Hero, \"s5/4yTRJzBfocGxBD567jQx87CY=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Hero","_s","city","setCity","weather","setWeather","handleChange","e","target","value","getWeather","alert","apiKey","response","get","data","console","log","error","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","main","temp","wind","speed","description","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["\r\n\r\n// function Hero(){\r\n    \r\n// // const [city, setCity]=useState(\"pune\");\r\n\r\n//     return(\r\n//         <>\r\n//         <input  onChange={''} type=\"text\" placeholder=\"Search Location \" />\r\n//         <button onClick={''} > Get Weather </button>\r\n//         <h2> City : Delhi </h2>\r\n//         <h4> Wind Speed :  </h4>\r\n//         </>\r\n//     );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Hero() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weather, setWeather] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  const getWeather = async () => {\r\n    if (!city) {\r\n      alert(\"Please enter a city name!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const apiKey = \"YOUR_API_KEY\"; // replace with your real key\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\r\n      );\r\n      setWeather(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching weather:\", error);\r\n      alert(\"City not found or API error!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Location\"\r\n        onChange={handleChange}\r\n        value={city}\r\n      />\r\n      <button onClick={getWeather}>Get Weather</button>\r\n\r\n      {weather && (\r\n        <>\r\n          <h2>City: {weather.name}</h2>\r\n          <h4>Temperature: {weather.main.temp}Â°C</h4>\r\n          <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n          <h4>Condition: {weather.weather[0].description}</h4>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Hero;\r\n\r\n"],"mappings":";;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACTS,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,IAAI;MACF,MAAMC,MAAM,GAAG,cAAc,CAAC,CAAC;MAC/B,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAC9B,qDAAqDZ,IAAI,UAAUU,MAAM,eAC3E,CAAC;MACDP,UAAU,CAACQ,QAAQ,CAACE,IAAI,CAAC;MACzBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CP,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,QAAQ,EAAEhB,YAAa;MACvBG,KAAK,EAAEP;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAEjB,UAAW;MAAAS,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEhDtB,OAAO,iBACNP,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,GAAI,QAAM,EAACf,OAAO,CAACwB,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7B7B,OAAA;QAAAsB,QAAA,GAAI,eAAa,EAACf,OAAO,CAACyB,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C7B,OAAA;QAAAsB,QAAA,GAAI,cAAY,EAACf,OAAO,CAAC2B,IAAI,CAACC,KAAK,EAAC,MAAI;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7C7B,OAAA;QAAAsB,QAAA,GAAI,aAAW,EAACf,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAAC6B,WAAW;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACpD,CACH;EAAA,eACD,CAAC;AAEP;AAACzB,EAAA,CA/CQD,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAgDb,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
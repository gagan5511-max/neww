{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\hero.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h1 style={styles.title}>Weather Data</h1>\n\n//       <div style={styles.inputContainer}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//           style={styles.input}\n//         />\n//         <button onClick={fetchWeather} style={styles.button}>\n//           Get Weather\n//         </button>\n//       </div>\n\n//       {error && <p style={styles.error}>{error}</p>}\n//       {weather && (\n//         <div style={styles.result}>\n//           <h2>{weather.name}</h2>\n//           <p>Temperature: {weather.main.temp}Â°C</p>\n//           <p>Wind: {weather.wind.speed} m/s</p>\n//           <p>{weather.weather[0].description}</p>\n//         </div>\n//       )}\n\n//       <p style={styles.footer}>Â© Imax</p>\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: {\n//     backgroundColor: \"#c9baa6\",\n//     borderRadius: 20,\n//     padding: 40,\n//     maxWidth: 600,\n//     margin: \"50px auto\",\n//     textAlign: \"center\",\n//     boxShadow: \"0 4px 10px rgba(0,0,0,0.2)\",\n//   },\n//   title: { color: \"#0d2c4b\", textDecoration: \"underline\" },\n//   inputContainer: { margin: \"20px 0\" },\n//   input: {\n//     padding: 10,\n//     width: 250,\n//     borderRadius: 15,\n//     border: \"2px solid #000\",\n//     marginRight: 10,\n//   },\n//   button: {\n//     padding: \"10px 15px\",\n//     borderRadius: 15,\n//     border: \"2px solid #000\",\n//     backgroundColor: \"#b5d3e7\",\n//     cursor: \"pointer\",\n//   },\n//   result: { marginTop: 20 },\n//   error: { color: \"red\" },\n//   footer: { marginTop: 30, color: \"#777\" },\n// };\n\n// export default Hero;\n\nimport React, { useState } from \"react\";\n// import \"./Hero.css\"; // ðŸ‘ˆ link your CSS file here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hero() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(\"\");\n  const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n  const fetchWeather = async () => {\n    if (!city) return setError(\"Please enter a city name\");\n    try {\n      setError(\"\");\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await res.json();\n      if (res.ok) {\n        setWeather(data);\n      } else {\n        setWeather(null);\n        setError(\"City not found\");\n      }\n    } catch {\n      setError(\"Error fetching data\");\n      setWeather(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"allmain\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Location\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeather,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Temperature: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Wind Speed: \", weather.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Weather: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA9 Imax\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(Hero, \"yY/MdfQmkTKkfnAomp9kslnXVH4=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hero","_s","city","setCity","weather","setWeather","error","setError","API_KEY","fetchWeather","res","fetch","data","json","ok","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","name","main","temp","wind","speed","description","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h1 style={styles.title}>Weather Data</h1>\r\n\r\n//       <div style={styles.inputContainer}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//           style={styles.input}\r\n//         />\r\n//         <button onClick={fetchWeather} style={styles.button}>\r\n//           Get Weather\r\n//         </button>\r\n//       </div>\r\n\r\n//       {error && <p style={styles.error}>{error}</p>}\r\n//       {weather && (\r\n//         <div style={styles.result}>\r\n//           <h2>{weather.name}</h2>\r\n//           <p>Temperature: {weather.main.temp}Â°C</p>\r\n//           <p>Wind: {weather.wind.speed} m/s</p>\r\n//           <p>{weather.weather[0].description}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       <p style={styles.footer}>Â© Imax</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: {\r\n//     backgroundColor: \"#c9baa6\",\r\n//     borderRadius: 20,\r\n//     padding: 40,\r\n//     maxWidth: 600,\r\n//     margin: \"50px auto\",\r\n//     textAlign: \"center\",\r\n//     boxShadow: \"0 4px 10px rgba(0,0,0,0.2)\",\r\n//   },\r\n//   title: { color: \"#0d2c4b\", textDecoration: \"underline\" },\r\n//   inputContainer: { margin: \"20px 0\" },\r\n//   input: {\r\n//     padding: 10,\r\n//     width: 250,\r\n//     borderRadius: 15,\r\n//     border: \"2px solid #000\",\r\n//     marginRight: 10,\r\n//   },\r\n//   button: {\r\n//     padding: \"10px 15px\",\r\n//     borderRadius: 15,\r\n//     border: \"2px solid #000\",\r\n//     backgroundColor: \"#b5d3e7\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   result: { marginTop: 20 },\r\n//   error: { color: \"red\" },\r\n//   footer: { marginTop: 30, color: \"#777\" },\r\n// };\r\n\r\n// export default Hero;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n// import \"./Hero.css\"; // ðŸ‘ˆ link your CSS file here\r\n\r\nfunction Hero() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weather, setWeather] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n  const fetchWeather = async () => {\r\n    if (!city) return setError(\"Please enter a city name\");\r\n\r\n    try {\r\n      setError(\"\");\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n      );\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        setWeather(data);\r\n      } else {\r\n        setWeather(null);\r\n        setError(\"City not found\");\r\n      }\r\n    } catch {\r\n      setError(\"Error fetching data\");\r\n      setWeather(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"allmain\">\r\n      <h1>Weather Data</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Location\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <button onClick={fetchWeather}>Get Weather</button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {weather && (\r\n        <div>\r\n          <h2>{weather.name}</h2>\r\n          <h4>Temperature: {weather.main.temp}Â°C</h4>\r\n          <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n          <h4>Weather: {weather.weather[0].description}</h4>\r\n        </div>\r\n      )}\r\n\r\n      <p>Â© Imax</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
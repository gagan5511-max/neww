{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\header.js\";\nimport React from 'react';\nimport Message from './hero';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Weather   Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      name: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_c = Header;\nexport default Header;\n\n// // App.js\n// import React, { useState } from \"react\";\n// import Message from \"./hero\";\n\n// function App() {\n//   const [count, setCount] = useState(0);\n\n//   return (\n//     <div>\n//       <h1>Parent Controlled Child Example</h1>\n//       <p>Count: {count}</p>\n\n//       <Message\n//         text=\"Increment\"\n//         onClick={() => setCount(count + 1)}\n//         user={{ name: \"Kanwar\", role: \"Developer\" }}\n//       />\n\n//       <Message\n//         text=\"Reset\"\n//         onClick={() => setCount(0)}\n//         user={{ name: \"John\", role: \"Designer\" }}\n//       />\n\n//       {/* This one has no user prop */}\n//       <Message text=\"No User\" onClick={() => alert(\"Hello\")} />\n//     </div>\n//   );\n// }\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/header.js"],"sourcesContent":["import React from 'react';\r\nimport Message from './hero';\r\nfunction Header(){\r\n    return(\r\n        <>\r\n          <h1> Weather   Data </h1>\r\n          <Message name=\"Done\"/>\r\n          {/* But sometimes, you want the parent component to control behavior, not the child component. */}\r\n        </>\r\n    );\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n// // App.js\r\n// import React, { useState } from \"react\";\r\n// import Message from \"./hero\";\r\n\r\n// function App() {\r\n//   const [count, setCount] = useState(0);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Parent Controlled Child Example</h1>\r\n//       <p>Count: {count}</p>\r\n\r\n//       <Message\r\n//         text=\"Increment\"\r\n//         onClick={() => setCount(count + 1)}\r\n//         user={{ name: \"Kanwar\", role: \"Developer\" }}\r\n//       />\r\n\r\n//       <Message\r\n//         text=\"Reset\"\r\n//         onClick={() => setCount(0)}\r\n//         user={{ name: \"John\", role: \"Designer\" }}\r\n//       />\r\n\r\n//       {/* This one has no user prop */}\r\n//       <Message text=\"No User\" onClick={() => alert(\"Hello\")} />\r\n//     </div>\r\n//   );\r\n// }\r\n// export default App;\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC7B,SAASC,MAAMA,CAAA,EAAE;EACb,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBR,OAAA,CAACF,OAAO;MAACW,IAAI,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEtB,CAAC;AAEX;AAACE,EAAA,GARQP,MAAM;AASf,eAAeA,MAAM;;AAKrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
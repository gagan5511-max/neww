{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\hero.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState, useRef} from 'react';\n// import logo from '../assets/cloud.png';\n// // import './App.css';\n\n// function Hero() {\n//   const inputRef=useRef();\n//   const [weather, setWeather]=useState(false);\n//   const API_key=\"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const search = async(city)=>{\n//     try{\n//      const url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_key}`;\n//      const response=await fetch(url);\n//      const data=await response.json();\n//      console.log(data);\n\n//       setWeather({\n//        humidity:data.main.humidity,\n//        temp:Math.floor(data.main.temp),\n//        windspeed:data.wind.speed,\n//        location:data.name\n//       })\n//     }\n//     catch(error)\n//     {\n//     }\n//   }\n//   useEffect(()=>{\n//     search(\"Delhi\");\n//   },[])\n//   return (\n//   <>\n//     <input type=\"search\" placeholder=\"Search Location\" ref={inputRef}/>\n//     <img src={logo} alt=\"logo\" width=\"35\" height=\"35\" onClick={()=>search(inputRef.current.value)}/>\n//     <h4> Wind Speed : {weather.windspeed} ms</h4>\n//     <h4> Tempature : {weather.temp} *C</h4>\n//     <h4> Humidity: {weather.humidity} % </h4>\n//     <h3> location: {weather.location}</h3>\n//   </>\n//   );\n// }\n// export default Hero;\n\n// text → read the current value\n// setText → update the value\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Example() {\n  _s();\n  const [text, setText] = useState(\"\"); // Step 1: create state\n\n  const handleChange = () => {\n    console.log(text);\n  };\n\n  // useEffect(() => {\n  //   console.log(\"Current count value:\", count);\n  // }, [count]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      style: {\n        padding: \"8px\",\n        fontSize: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChange,\n      children: \"Increase Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Example, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = Example;\nexport default Example;\n\n// import React, { useState } from \"react\";\n\n// function Hero() {\n//   const [form, setForm] = useState({ name: \"\", email: \"\" });\n\n//   const handleSubmit = () => {\n//     alert(`Name: ${form.name}, Email: ${form.email}`);\n//     setForm({ name: \"\", email: \"\" });\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         placeholder=\"Name\"\n//         value={form.name}\n//         onChange={(e) => setForm({ ...form, name: e.target.value })}\n//       />\n//       <input\n//         placeholder=\"Email\"\n//         value={form.email}\n//         onChange={(e) => setForm({ ...form, email: e.target.value })}\n//       />\n//       <button onClick={handleSubmit}>Submit</button>\n//       <p>Current State: {JSON.stringify(form)}</p>\n//     </div>\n//   );\n// }\n\n// export default Hero;\n\n// import React, { useState } from \"react\";\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");}\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//        <input type=\"text\" placeholder=\"Search Location\" value={city} onChange={(e) => setCity(e.target.value)}/>\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       {weather && (\n//         <div>\n//           <h2>{weather.name}</h2>\n//           <h4>Temperature: {weather.main.temp}°C</h4>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Weather: {weather.weather[0].description}</h4>\n//         </div>\n//       )}\n//       <p>  © Imax  </p>\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   // Function to fetch weather data\n//   const fetchWeather = async () => {\n//     if (!city) return;\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   //  useEffect runs automatically when 'city' changes\n//   useEffect(() => {\n//     if (city.trim() !== \"\") {\n//       const timer = setTimeout(() => {\n//         fetchWeather();\n//       }, 800); // delay for better performance (debounce effect)\n//       return () => clearTimeout(timer);\n//     }\n//   }, [city]); // dependency array\n\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//         />\n//         {/* We can keep button as optional trigger */}\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//       {weather && (\n//         <div>\n//           <h2>{weather.name}</h2>\n//           <h4>Temperature: {weather.main.temp}°C</h4>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Weather: {weather.weather[0].description}</h4>\n//         </div>\n//       )}\n//       <p>© Imax</p>\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   // ✅ useEffect: runs every time city changes\n//   useEffect(() => {\n//     if (city.trim() !== \"\") {\n//       console.log(\"Typed City:\", city); // show typed value\n//     }\n//   }, [city]);\n\n//   // ✅ fetch weather when button clicked\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//         console.log(\"Fetched Weather Data:\", data); // show API data in console\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//         />\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//       {weather && (\n//         <div>\n//           <h3>City: {weather.name}</h3>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Temperature: {weather.main.temp}°C</h4>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// 👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏\n// 👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇\n// import React, { useState } from \"react\";\n\n// function InputLogger() {\n//   const [text, setText] = useState(\"\"); // Step 1: Create state\n\n//   const handleClick = () => {\n//     console.log(\"User entered:\", text); // Step 3: Log the value to console\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Type something...\"\n//         value={text}                   // Step 2: Bind input to state\n//         onChange={(e) => setText(e.target.value)}\n//         style={{ padding: \"8px\", width: \"200px\" }}\n//       />\n//       <button\n//         onClick={handleClick}\n//         style={{ marginLeft: \"10px\", padding: \"8px 15px\" }}\n//       >\n//         Log Input\n//       </button>\n//     </div>\n//   );\n// }\n// ✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅\n// export default InputLogger;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Example","_s","text","setText","handleChange","console","log","style","textAlign","marginTop","children","type","value","onChange","e","target","padding","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["// import { useEffect, useState, useRef} from 'react';\r\n// import logo from '../assets/cloud.png';\r\n// // import './App.css';\r\n\r\n// function Hero() {\r\n//   const inputRef=useRef();\r\n//   const [weather, setWeather]=useState(false);\r\n//   const API_key=\"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const search = async(city)=>{\r\n//     try{\r\n//      const url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_key}`;\r\n//      const response=await fetch(url);\r\n//      const data=await response.json();\r\n//      console.log(data);\r\n\r\n//       setWeather({\r\n//        humidity:data.main.humidity,\r\n//        temp:Math.floor(data.main.temp),\r\n//        windspeed:data.wind.speed,\r\n//        location:data.name\r\n//       })\r\n//     }\r\n//     catch(error)\r\n//     {\r\n//     }\r\n//   }\r\n//   useEffect(()=>{\r\n//     search(\"Delhi\");\r\n//   },[])\r\n//   return (\r\n//   <>\r\n//     <input type=\"search\" placeholder=\"Search Location\" ref={inputRef}/>\r\n//     <img src={logo} alt=\"logo\" width=\"35\" height=\"35\" onClick={()=>search(inputRef.current.value)}/>\r\n//     <h4> Wind Speed : {weather.windspeed} ms</h4>\r\n//     <h4> Tempature : {weather.temp} *C</h4>\r\n//     <h4> Humidity: {weather.humidity} % </h4>\r\n//     <h3> location: {weather.location}</h3>\r\n//   </>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n// text → read the current value\r\n// setText → update the value\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Example() {\r\n  const [text,setText] = useState(\"\"); // Step 1: create state\r\n\r\n  const handleChange = () => {\r\n\r\n     console.log(text)\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Current count value:\", count);\r\n  // }, [count]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\r\n      <input \r\n        type=\"text\" \r\n        value={text} \r\n        onChange={(e)=> setText(e.target.value)} \r\n        style={{ padding: \"8px\", fontSize: \"16px\" }} \r\n      />\r\n      <br /><br />\r\n      <button onClick={handleChange}>Increase Count</button>\r\n    </div>\r\n  );\r\n}\r\nexport default Example;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// function Hero() {\r\n//   const [form, setForm] = useState({ name: \"\", email: \"\" });\r\n\r\n//   const handleSubmit = () => {\r\n//     alert(`Name: ${form.name}, Email: ${form.email}`);\r\n//     setForm({ name: \"\", email: \"\" });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         placeholder=\"Name\"\r\n//         value={form.name}\r\n//         onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n//       />\r\n//       <input\r\n//         placeholder=\"Email\"\r\n//         value={form.email}\r\n//         onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n//       />\r\n//       <button onClick={handleSubmit}>Submit</button>\r\n//       <p>Current State: {JSON.stringify(form)}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");}\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//        <input type=\"text\" placeholder=\"Search Location\" value={city} onChange={(e) => setCity(e.target.value)}/>\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//       {weather && (\r\n//         <div>\r\n//           <h2>{weather.name}</h2>\r\n//           <h4>Temperature: {weather.main.temp}°C</h4>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Weather: {weather.weather[0].description}</h4>\r\n//         </div>\r\n//       )}\r\n//       <p>  © Imax  </p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// // import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   // Function to fetch weather data\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return;\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   //  useEffect runs automatically when 'city' changes\r\n//   useEffect(() => {\r\n//     if (city.trim() !== \"\") {\r\n//       const timer = setTimeout(() => {\r\n//         fetchWeather();\r\n//       }, 800); // delay for better performance (debounce effect)\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [city]); // dependency array\r\n\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//         />\r\n//         {/* We can keep button as optional trigger */}\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//       {weather && (\r\n//         <div>\r\n//           <h2>{weather.name}</h2>\r\n//           <h4>Temperature: {weather.main.temp}°C</h4>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Weather: {weather.weather[0].description}</h4>\r\n//         </div>\r\n//       )}\r\n//       <p>© Imax</p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// // import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   // ✅ useEffect: runs every time city changes\r\n//   useEffect(() => {\r\n//     if (city.trim() !== \"\") {\r\n//       console.log(\"Typed City:\", city); // show typed value\r\n//     }\r\n//   }, [city]);\r\n\r\n//   // ✅ fetch weather when button clicked\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//         console.log(\"Fetched Weather Data:\", data); // show API data in console\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//         />\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//       {weather && (\r\n//         <div>\r\n//           <h3>City: {weather.name}</h3>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Temperature: {weather.main.temp}°C</h4>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏\r\n// 👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇👇\r\n// import React, { useState } from \"react\";\r\n\r\n// function InputLogger() {\r\n//   const [text, setText] = useState(\"\"); // Step 1: Create state\r\n\r\n//   const handleClick = () => {\r\n//     console.log(\"User entered:\", text); // Step 3: Log the value to console\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Type something...\"\r\n//         value={text}                   // Step 2: Bind input to state\r\n//         onChange={(e) => setText(e.target.value)}\r\n//         style={{ padding: \"8px\", width: \"200px\" }}\r\n//       />\r\n//       <button\r\n//         onClick={handleClick}\r\n//         style={{ marginLeft: \"10px\", padding: \"8px 15px\" }}\r\n//       >\r\n//         Log Input\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n// ✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅\r\n// export default InputLogger;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAErC,MAAMO,YAAY,GAAGA,CAAA,KAAM;IAExBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACpB,CAAC;;EAED;EACA;EACA;;EAEA,oBACEH,OAAA;IAAKQ,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,IAAK;MACZW,QAAQ,EAAGC,CAAC,IAAIX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCL,KAAK,EAAE;QAAES,OAAO,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAAtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZtB,OAAA;MAAQuB,OAAO,EAAElB,YAAa;MAAAM,QAAA,EAAC;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACpB,EAAA,CAxBQD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAyBhB,eAAeA,OAAO;;AAStB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
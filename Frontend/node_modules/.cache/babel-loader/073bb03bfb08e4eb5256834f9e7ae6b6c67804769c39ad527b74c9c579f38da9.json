{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\hero.js\",\n  _s = $RefreshSig$();\n// function Hero(){\n\n// // const [city, setCity]=useState(\"pune\");\n\n//     return(\n//         <>\n//         <input  onChange={''} type=\"text\" placeholder=\"Search Location \" />\n//         <button onClick={''} > Get Weather </button>\n//         <h2> City : Delhi </h2>\n//         <h4> Wind Speed :  </h4>\n//         </>\n//     );\n// }\n// export default Hero;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hero() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [forecast, setForecast] = useState([]);\n  const [error, setError] = useState(\"\");\n  const apiKey = \"9b93d18187994bb82e265588def39487\";\n\n  // Fetch forecast by city name\n  const getForecastByCity = async () => {\n    if (!city) {\n      setError(\"Please enter a city name\");\n      setForecast([]);\n      return;\n    }\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);\n      const data = await response.json();\n      if (data.cod === \"200\" || data.cod === 200) {\n        // Simplify: take one forecast per day (every 8th entry = 24h)\n        const dailyForecast = data.list.filter((item, index) => index % 8 === 0);\n        setForecast(dailyForecast);\n        setError(\"\");\n      } else {\n        setError(data.message);\n        setForecast([]);\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch forecast data\");\n      setForecast([]);\n    }\n  };\n\n  // Fetch forecast by coordinates\n  const getForecastByCoords = async (lat, lon) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`);\n      const data = await response.json();\n      if (data.cod === \"200\" || data.cod === 200) {\n        const dailyForecast = data.list.filter((item, index) => index % 8 === 0);\n        setForecast(dailyForecast);\n        setError(\"\");\n      } else {\n        setError(data.message);\n        setForecast([]);\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch forecast data\");\n      setForecast([]);\n    }\n  };\n  const handleCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        getForecastByCoords(lat, lon);\n      }, err => {\n        console.error(err);\n        setError(\"Unable to get your location\");\n      });\n    } else {\n      setError(\"Geolocation is not supported by your browser\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Location\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      style: {\n        padding: \"10px\",\n        width: \"250px\",\n        borderRadius: \"5px\",\n        border: \"1px solid #ccc\",\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getForecastByCity,\n      style: {\n        padding: \"10px 20px\",\n        borderRadius: \"5px\",\n        border: \"none\",\n        backgroundColor: \"#007bff\",\n        color: \"#fff\",\n        cursor: \"pointer\",\n        marginRight: \"10px\"\n      },\n      children: \"Get Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCurrentLocation,\n      style: {\n        padding: \"10px 20px\",\n        borderRadius: \"5px\",\n        border: \"none\",\n        backgroundColor: \"#28a745\",\n        color: \"#fff\",\n        cursor: \"pointer\"\n      },\n      children: \"Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this), forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"5-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), forecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Day \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", day.main.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather: \", day.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", day.wind.speed, \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Hero, \"wftqVGg7Ol66EnBgFY4fIAU90h8=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hero","_s","city","setCity","forecast","setForecast","error","setError","apiKey","getForecastByCity","response","fetch","data","json","cod","dailyForecast","list","filter","item","index","message","err","console","getForecastByCoords","lat","lon","handleCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","style","textAlign","marginTop","children","type","placeholder","value","onChange","e","target","padding","width","borderRadius","border","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","cursor","length","map","day","marginBottom","main","temp","weather","description","wind","speed","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["\r\n\r\n// function Hero(){\r\n    \r\n// // const [city, setCity]=useState(\"pune\");\r\n\r\n//     return(\r\n//         <>\r\n//         <input  onChange={''} type=\"text\" placeholder=\"Search Location \" />\r\n//         <button onClick={''} > Get Weather </button>\r\n//         <h2> City : Delhi </h2>\r\n//         <h4> Wind Speed :  </h4>\r\n//         </>\r\n//     );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Hero() {\r\n  const [city, setCity] = useState(\"\");\r\n  const [forecast, setForecast] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const apiKey = \"9b93d18187994bb82e265588def39487\";\r\n\r\n  // Fetch forecast by city name\r\n  const getForecastByCity = async () => {\r\n    if (!city) {\r\n      setError(\"Please enter a city name\");\r\n      setForecast([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.cod === \"200\" || data.cod === 200) {\r\n        // Simplify: take one forecast per day (every 8th entry = 24h)\r\n        const dailyForecast = data.list.filter((item, index) => index % 8 === 0);\r\n        setForecast(dailyForecast);\r\n        setError(\"\");\r\n      } else {\r\n        setError(data.message);\r\n        setForecast([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Failed to fetch forecast data\");\r\n      setForecast([]);\r\n    }\r\n  };\r\n\r\n  // Fetch forecast by coordinates\r\n  const getForecastByCoords = async (lat, lon) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.cod === \"200\" || data.cod === 200) {\r\n        const dailyForecast = data.list.filter((item, index) => index % 8 === 0);\r\n        setForecast(dailyForecast);\r\n        setError(\"\");\r\n      } else {\r\n        setError(data.message);\r\n        setForecast([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Failed to fetch forecast data\");\r\n      setForecast([]);\r\n    }\r\n  };\r\n\r\n  const handleCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const lat = position.coords.latitude;\r\n          const lon = position.coords.longitude;\r\n          getForecastByCoords(lat, lon);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n          setError(\"Unable to get your location\");\r\n        }\r\n      );\r\n    } else {\r\n      setError(\"Geolocation is not supported by your browser\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Location\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n        style={{\r\n          padding: \"10px\",\r\n          width: \"250px\",\r\n          borderRadius: \"5px\",\r\n          border: \"1px solid #ccc\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={getForecastByCity}\r\n        style={{\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"5px\",\r\n          border: \"none\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"#fff\",\r\n          cursor: \"pointer\",\r\n          marginRight: \"10px\",\r\n        }}\r\n      >\r\n        Get Forecast\r\n      </button>\r\n      <button\r\n        onClick={handleCurrentLocation}\r\n        style={{\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"5px\",\r\n          border: \"none\",\r\n          backgroundColor: \"#28a745\",\r\n          color: \"#fff\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Current Location\r\n      </button>\r\n\r\n      {error && <p style={{ color: \"red\", marginTop: \"20px\" }}>{error}</p>}\r\n\r\n      {forecast.length > 0 && (\r\n        <div style={{ marginTop: \"30px\" }}>\r\n          <h2>5-Day Forecast</h2>\r\n          {forecast.map((day, index) => (\r\n            <div key={index} style={{ marginBottom: \"15px\" }}>\r\n              <h4>Day {index + 1}</h4>\r\n              <p>Temperature: {day.main.temp} °C</p>\r\n              <p>Weather: {day.weather[0].description}</p>\r\n              <p>Wind Speed: {day.wind.speed} m/s</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
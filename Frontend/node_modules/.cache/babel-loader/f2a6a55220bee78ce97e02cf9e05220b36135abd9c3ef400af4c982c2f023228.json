{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Header from \"./component/header\";\nimport Hero from './component/hero';\nimport Footer from './component/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"allmain\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import React, { useState } from \"react\";\n// import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const API_KEY = \"YOUR_API_KEY\"; // üîë Replace with your OpenWeatherMap API key\n\n//   // Fetch weather data from OpenWeatherMap\n//   const fetchWeather = async () => {\n//     if (!city) return;\n\n//     try {\n//       const response = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await response.json();\n\n//       if (data.cod === \"404\") {\n//         setError(\"City not found\");\n//         setWeather(null);\n//       } else {\n//         setWeather(data);\n//         setError(null);\n//       }\n//     } catch (err) {\n//       setError(\"Failed to fetch weather data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   // Trigger fetch on Enter key\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       fetchWeather();\n//     }\n//   };\n\n//   return (\n//     <div className=\"hero-container\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter City (e.g. Delhi)\"\n//         value={city}\n//         onChange={(e) => setCity(e.target.value)}\n//         onKeyDown={handleKeyPress}\n//         className=\"search-box\"\n//       />\n//       <button onClick={fetchWeather}>Get Weather</button>\n\n//       {error && <div className=\"error\">{error}</div>}\n\n//       {weather && !error && (\n//         <div className=\"weather-info\">\n//           <h2>üåÜ City: {weather?.name}</h2>\n//           <h3>üå°Ô∏è Temperature: {weather?.main?.temp}¬∞C</h3>\n//           <h4>üí® Wind Speed: {weather?.wind?.speed} m/s</h4>\n//           <h4>‚òÅÔ∏è Condition: {weather?.weather?.[0]?.description}</h4>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Hero;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Hero","Footer","jsxDEV","_jsxDEV","App","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"./component/header\";\r\nimport Hero from './component/hero';\r\nimport Footer from './component/footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"allmain\">\r\n       \r\n       \r\n        <Header />\r\n        <Hero />\r\n        <Footer />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const API_KEY = \"YOUR_API_KEY\"; // üîë Replace with your OpenWeatherMap API key\r\n\r\n//   // Fetch weather data from OpenWeatherMap\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return;\r\n\r\n//     try {\r\n//       const response = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await response.json();\r\n\r\n//       if (data.cod === \"404\") {\r\n//         setError(\"City not found\");\r\n//         setWeather(null);\r\n//       } else {\r\n//         setWeather(data);\r\n//         setError(null);\r\n//       }\r\n//     } catch (err) {\r\n//       setError(\"Failed to fetch weather data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   // Trigger fetch on Enter key\r\n//   const handleKeyPress = (e) => {\r\n//     if (e.key === \"Enter\") {\r\n//       fetchWeather();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"hero-container\">\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter City (e.g. Delhi)\"\r\n//         value={city}\r\n//         onChange={(e) => setCity(e.target.value)}\r\n//         onKeyDown={handleKeyPress}\r\n//         className=\"search-box\"\r\n//       />\r\n//       <button onClick={fetchWeather}>Get Weather</button>\r\n\r\n//       {error && <div className=\"error\">{error}</div>}\r\n\r\n//       {weather && !error && (\r\n//         <div className=\"weather-info\">\r\n//           <h2>üåÜ City: {weather?.name}</h2>\r\n//           <h3>üå°Ô∏è Temperature: {weather?.main?.temp}¬∞C</h3>\r\n//           <h4>üí® Wind Speed: {weather?.wind?.speed} m/s</h4>\r\n//           <h4>‚òÅÔ∏è Condition: {weather?.weather?.[0]?.description}</h4>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Hero;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,EAAE,EAAC,SAAS;IAAAC,QAAA,gBAGbH,OAAA,CAACJ,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVP,OAAA,CAACH,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRP,OAAA,CAACF,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAEV;AAACC,EAAA,GAXQP,GAAG;AAaZ,eAAeA,GAAG;;AAMlB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
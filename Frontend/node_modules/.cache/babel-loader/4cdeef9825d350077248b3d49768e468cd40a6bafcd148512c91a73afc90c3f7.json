{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\hero.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState, useRef} from 'react';\n// import logo from '../assets/cloud.png';\n// // import './App.css';\n\n// const { useState } = require(\"react\");\n\n// function Hero() {\n//   const inputRef=useRef();\n//   const [weather, setWeather]=useState(false);\n//   const API_key=\"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const search = async(city)=>{\n//     try{\n//      const url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_key}`;\n//      const response=await fetch(url);\n//      const data=await response.json();\n//      console.log(data);\n\n//       setWeather({\n//        humidity:data.main.humidity,\n//        temp:Math.floor(data.main.temp),\n//        windspeed:data.wind.speed,\n//        location:data.name\n//       })\n//     }\n//     catch(error)\n//     {\n//     }\n//   }\n//   useEffect(()=>{\n//     search(\"Delhi\");\n//   },[])\n//   return (\n//   <>\n//     <input type=\"search\" placeholder=\"Search Location\" ref={inputRef}/>\n//     <img src={logo} alt=\"logo\" width=\"35\" height=\"35\" onClick={()=>search(inputRef.current.value)}/>\n//     <h4> Wind Speed : {weather.windspeed} ms</h4>\n//     <h4> Tempature : {weather.temp} *C</h4>\n//     <h4> Humidity: {weather.humidity} % </h4>\n//     <h3> location: {weather.location}</h3>\n//   </>\n//   );\n// }\n// export default Hero;\n\n// USESTATE     USESTATE      USESTATE        USESTATE \n// USESTATE     USESTATE      USESTATE        USESTATE      \n// Useful for API calls-> U can send current text to backend when a button is clicked.\n\n// import React, { useState } from \"react\";\n\n// function Example() {\n//   const [text,setText] = useState(\"\"); // Step 1: create state\n//   const [message, setMessage] = useState(\"\");\n\n//   const handleChange = () => {\n//     console.log(text);\n//        setMessage(`You typed: ${text}`);\n//   };\n\n//   // useEffect(() => {\n//   //   console.log(\"Current count value:\", count);\n//   // }, [count]);\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\n//       <input \n//         type=\"text\"  \n//         value={text}//  Without value-  React cannot directly control or reset the input.\n//         onChange={(e)=> setText(e.target.value)} \n//         style={{ padding: \"8px\", fontSize: \"16px\" }} \n//       />\n//       <br />  <br />\n//       <button onClick={handleChange}>Increase Count</button>\n//          <p>{text}</p>\n//     </div>\n//   );\n// }\n// export default Example;\n\n//           During Interview\n// I would use a state variable to store input, and another array  state to\n//  store all values.  On button click, I‚Äôll add the input to that array using \n// the spread operator. Then React  will automatically re-render the list.‚Äù\n// import React, { useState } from \"react\";\n// function Wishlist() {\n//   const [item, setItem] = useState([]); // stores all items\n\n//   let currentInput = \"\"; // temporary variable for input\n\n//   const handleChange = (e) => {\n//     currentInput = e.target.value; // update temporary input\n//   };\n\n//   const addItem = () => {\n//     if (currentInput.trim() !== \"\") {\n//       setItem([...item, currentInput]); // add input to array\n//       currentInput = \"\"; // clear temporary input\n//       document.getElementById(\"inputBox\").value = \"\"; // clear input field\n//     }\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h2>üõí Simple Wishlist</h2>\n//       <input\n//         type=\"text\"\n//         id=\"inputBox\"\n//         placeholder=\"Enter item...\"\n//         onChange={handleChange}\n//       />\n//       <button onClick={addItem}>Add Item</button>\n\n//       <ul >\n//         {item.map((wish, index) => (\n//           <li>‚≠ê {wish} </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Wishlist;\n\n// import React, { useState } from \"react\";\n// function Wishlist() {\n//   const [item, setItem] = useState([\"product\"]); // for all items\n//   const [text, setText] = useState(\"\"); // for input box\n//   const addItem = () => { \n//       setItem([ ...item,text]); // We get Input Value then show within UL/LI\n//       //  we use item cause of List str maintain-==>     no shifft below\n//   };\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h2>üõí Simple Wishlist</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter item...\"\n//         value={text}\n//         onChange={(e) => setText(e.target.value)} // update input state\n//       />\n//       <button onClick={addItem}>Add Item</button>\n\n//       <ul style={{ listStyle: \"none\", padding: 0, marginTop: \"20px\" }}>\n//         {item.map((wish, index) => (\n//           <li key={index}>‚≠ê {wish}</li>\n//         ))}    </ul> </div> ); } export default Wishlist;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Show() {\n  _s();\n  const [pick, setPick] = useState(\"\");\n  const [show, setShow] = useState([]);\n\n  // const handleClick=()=>{\n  //   setShow(pick);\n  //   setPick('');\n  // };\n  const addItem = () => {\n    setShow([...show, pick]); // We get Input Value then show within UL/LI\n    // setPick(\"\");  \n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Fill User\",\n      value: pick,\n      onChange: e => setPick(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: \"10px 15px\"\n      },\n      onClick: addItem,\n      children: \" Transfer Data  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: n\n      },\n      children: show.map((wish, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: wish\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Show, \"H0v72Q5QaIzMxQk1dznFUwfNwKA=\");\n_c = Show;\nexport default Show;\n\n// import React, { useState } from \"react\";\n// function ManageArray() {\n//   const [fruits, setFruits] = useState([\"Apple\", \"Banana\"]);\n\n//   const addFruit = () => {\n//     setFruits([...fruits, \"Mango\"]);\n//   };\n\n//   const removeFruit = (index) => {\n//     const updated = fruits.filter((_, i) => i !== index);\n//     setFruits(updated);\n//   };\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h2>Manage Array with useState</h2>\n//       <button onClick={addFruit}>Add Fruit</button>\n\n//       <ul style={{ listStyle: \"none\" }}>\n//         {fruits.map((fruit, index) => (\n//           <li key={index}>\n//             {fruit}{\" \"}\n//             <button onClick={() => removeFruit(index)}>Remove</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n// export default ManageArray;\n\n// import React, { useState } from \"react\";\n\n// function ArrayExample() {\n//   // Step 1: Initialize state with empty array\n//   const [items, setItems] = useState([]);\n\n//   // Step 2: Add new item on button click\n//   const handleAdd = () => {\n//     const newItem = `Item ${items.length + 1}`;\n//     // create new array and update state\n//     setItems([...items, newItem]);\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h2>useState with Array Example</h2>\n//       <button onClick={handleAdd}>Add Item</button>\n\n//       <ul style={{ listStyle: \"none\" }}>\n//         {items.map((item, index) => (\n//           <li key={index}>{item}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default ArrayExample;\n\n// import React, { useState } from \"react\";\n\n// function Hero() {\n//   const [form, setForm] = useState({ name: \"\", email: \"\" });\n\n//   const handleSubmit = () => {\n//     alert(`Name: ${form.name}, Email: ${form.email}`);\n//     setForm({ name: \"\", email: \"\" });\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         placeholder=\"Name\"\n//         value={form.name}\n//         onChange={(e) => setForm({ ...form, name: e.target.value })}\n//       />\n//       <input\n//         placeholder=\"Email\"\n//         value={form.email}\n//         onChange={(e) => setForm({ ...form, email: e.target.value })}\n//       />\n//       <button onClick={handleSubmit}>Submit</button>\n//       <p>Current State: {JSON.stringify(form)}</p>\n//     </div>\n//   );\n// }\n\n// export default Hero;\n\n// import React, { useState } from \"react\";\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");}\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//        <input type=\"text\" placeholder=\"Search Location\" value={city} onChange={(e) => setCity(e.target.value)}/>\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       {weather && (\n//         <div>\n//           <h2>{weather.name}</h2>\n//           <h4>Temperature: {weather.main.temp}¬∞C</h4>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Weather: {weather.weather[0].description}</h4>\n//         </div>\n//       )}\n//       <p>  ¬© Imax  </p>\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   // Function to fetch weather data\n//   const fetchWeather = async () => {\n//     if (!city) return;\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   //  useEffect runs automatically when 'city' changes\n//   useEffect(() => {\n//     if (city.trim() !== \"\") {\n//       const timer = setTimeout(() => {\n//         fetchWeather();\n//       }, 800); // delay for better performance (debounce effect)\n//       return () => clearTimeout(timer);\n//     }\n//   }, [city]); // dependency array\n\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//         />\n//         {/* We can keep button as optional trigger */}\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//       {weather && (\n//         <div>\n//           <h2>{weather.name}</h2>\n//           <h4>Temperature: {weather.main.temp}¬∞C</h4>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Weather: {weather.weather[0].description}</h4>\n//         </div>\n//       )}\n//       <p>¬© Imax</p>\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   // ‚úÖ useEffect: runs every time city changes\n//   useEffect(() => {\n//     if (city.trim() !== \"\") {\n//       console.log(\"Typed City:\", city); // show typed value\n//     }\n//   }, [city]);\n\n//   // ‚úÖ fetch weather when button clicked\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//         console.log(\"Fetched Weather Data:\", data); // show API data in console\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//         />\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//       {weather && (\n//         <div>\n//           <h3>City: {weather.name}</h3>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Temperature: {weather.main.temp}¬∞C</h4>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// // üëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëè\n// // üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá\n// import React, { useState } from \"react\";\n\n// function InputLogger() {\n//   const [text, setText] = useState(\"\"); // Step 1: Create state\n\n//   const handleClick = () => {\n//     console.log(\"User entered:\", text); // Step 3: Log the value to console\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Type something...\"\n//                          // Step 2: Bind input to state\n//         onChange={(e) => setText(e.target.value)}\n//         style={{ padding: \"8px\", width: \"200px\" }}\n//       />\n//       <button\n//         onClick={handleClick}\n//         style={{ marginLeft: \"10px\", padding: \"8px 15px\" }}\n//       >\n//         Log Input\n//       </button>\n//     </div>\n//   );\n// }\n// // ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ\n// export default InputLogger;\nvar _c;\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Show","_s","pick","setPick","show","setShow","addItem","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onClick","listStyle","n","map","wish","index","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["// import { useEffect, useState, useRef} from 'react';\r\n// import logo from '../assets/cloud.png';\r\n// // import './App.css';\r\n\r\n// const { useState } = require(\"react\");\r\n\r\n// function Hero() {\r\n//   const inputRef=useRef();\r\n//   const [weather, setWeather]=useState(false);\r\n//   const API_key=\"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const search = async(city)=>{\r\n//     try{\r\n//      const url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_key}`;\r\n//      const response=await fetch(url);\r\n//      const data=await response.json();\r\n//      console.log(data);\r\n\r\n//       setWeather({\r\n//        humidity:data.main.humidity,\r\n//        temp:Math.floor(data.main.temp),\r\n//        windspeed:data.wind.speed,\r\n//        location:data.name\r\n//       })\r\n//     }\r\n//     catch(error)\r\n//     {\r\n//     }\r\n//   }\r\n//   useEffect(()=>{\r\n//     search(\"Delhi\");\r\n//   },[])\r\n//   return (\r\n//   <>\r\n//     <input type=\"search\" placeholder=\"Search Location\" ref={inputRef}/>\r\n//     <img src={logo} alt=\"logo\" width=\"35\" height=\"35\" onClick={()=>search(inputRef.current.value)}/>\r\n//     <h4> Wind Speed : {weather.windspeed} ms</h4>\r\n//     <h4> Tempature : {weather.temp} *C</h4>\r\n//     <h4> Humidity: {weather.humidity} % </h4>\r\n//     <h3> location: {weather.location}</h3>\r\n//   </>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n// USESTATE     USESTATE      USESTATE        USESTATE \r\n// USESTATE     USESTATE      USESTATE        USESTATE      \r\n// Useful for API calls-> U can send current text to backend when a button is clicked.\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// function Example() {\r\n//   const [text,setText] = useState(\"\"); // Step 1: create state\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const handleChange = () => {\r\n//     console.log(text);\r\n//        setMessage(`You typed: ${text}`);\r\n//   };\r\n\r\n//   // useEffect(() => {\r\n//   //   console.log(\"Current count value:\", count);\r\n//   // }, [count]);\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\r\n//       <input \r\n//         type=\"text\"  \r\n//         value={text}//  Without value-  React cannot directly control or reset the input.\r\n//         onChange={(e)=> setText(e.target.value)} \r\n//         style={{ padding: \"8px\", fontSize: \"16px\" }} \r\n//       />\r\n//       <br />  <br />\r\n//       <button onClick={handleChange}>Increase Count</button>\r\n//          <p>{text}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Example;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//           During Interview\r\n// I would use a state variable to store input, and another array  state to\r\n//  store all values.  On button click, I‚Äôll add the input to that array using \r\n// the spread operator. Then React  will automatically re-render the list.‚Äù\r\n// import React, { useState } from \"react\";\r\n// function Wishlist() {\r\n//   const [item, setItem] = useState([]); // stores all items\r\n\r\n//   let currentInput = \"\"; // temporary variable for input\r\n\r\n//   const handleChange = (e) => {\r\n//     currentInput = e.target.value; // update temporary input\r\n//   };\r\n\r\n//   const addItem = () => {\r\n//     if (currentInput.trim() !== \"\") {\r\n//       setItem([...item, currentInput]); // add input to array\r\n//       currentInput = \"\"; // clear temporary input\r\n//       document.getElementById(\"inputBox\").value = \"\"; // clear input field\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <h2>üõí Simple Wishlist</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         id=\"inputBox\"\r\n//         placeholder=\"Enter item...\"\r\n//         onChange={handleChange}\r\n//       />\r\n//       <button onClick={addItem}>Add Item</button>\r\n\r\n//       <ul >\r\n//         {item.map((wish, index) => (\r\n//           <li>‚≠ê {wish} </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Wishlist;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// function Wishlist() {\r\n//   const [item, setItem] = useState([\"product\"]); // for all items\r\n//   const [text, setText] = useState(\"\"); // for input box\r\n//   const addItem = () => { \r\n//       setItem([ ...item,text]); // We get Input Value then show within UL/LI\r\n//       //  we use item cause of List str maintain-==>     no shifft below\r\n//   };\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <h2>üõí Simple Wishlist</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter item...\"\r\n//         value={text}\r\n//         onChange={(e) => setText(e.target.value)} // update input state\r\n//       />\r\n//       <button onClick={addItem}>Add Item</button>\r\n\r\n//       <ul style={{ listStyle: \"none\", padding: 0, marginTop: \"20px\" }}>\r\n//         {item.map((wish, index) => (\r\n//           <li key={index}>‚≠ê {wish}</li>\r\n//         ))}    </ul> </div> ); } export default Wishlist;\r\n\r\n\r\n\r\nimport React,{useState} from \"react\";\r\nfunction Show(){\r\n  const [pick, setPick]=useState(\"\");\r\n  const [show,setShow]=useState([]);\r\n \r\n  // const handleClick=()=>{\r\n  //   setShow(pick);\r\n  //   setPick('');\r\n  // };\r\n  const addItem = () => { \r\n    setShow([ ...show,pick]); // We get Input Value then show within UL/LI\r\n    // setPick(\"\");  \r\n  };\r\n\r\n   \r\n  return(\r\n    <>\r\n    \r\n    <input type=\"text\" placeholder=\"Fill User\" value={pick} onChange={(e)=>setPick(e.target.value)} />\r\n    <button style={{padding:\"10px 15px\"}} onClick={addItem} > Transfer Data  </button>\r\n    {/* <p> {show} </p> */}\r\n    <ul style={{listStyle:n}}> \r\n      {show.map((wish,index)=>(\r\n      <li key={index}>{wish}</li>\r\n      ))}\r\n    </ul>\r\n\r\n    </>\r\n  );\r\n}\r\nexport default Show;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// function ManageArray() {\r\n//   const [fruits, setFruits] = useState([\"Apple\", \"Banana\"]);\r\n\r\n//   const addFruit = () => {\r\n//     setFruits([...fruits, \"Mango\"]);\r\n//   };\r\n\r\n//   const removeFruit = (index) => {\r\n//     const updated = fruits.filter((_, i) => i !== index);\r\n//     setFruits(updated);\r\n//   };\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <h2>Manage Array with useState</h2>\r\n//       <button onClick={addFruit}>Add Fruit</button>\r\n\r\n//       <ul style={{ listStyle: \"none\" }}>\r\n//         {fruits.map((fruit, index) => (\r\n//           <li key={index}>\r\n//             {fruit}{\" \"}\r\n//             <button onClick={() => removeFruit(index)}>Remove</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default ManageArray;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// function ArrayExample() {\r\n//   // Step 1: Initialize state with empty array\r\n//   const [items, setItems] = useState([]);\r\n\r\n//   // Step 2: Add new item on button click\r\n//   const handleAdd = () => {\r\n//     const newItem = `Item ${items.length + 1}`;\r\n//     // create new array and update state\r\n//     setItems([...items, newItem]);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <h2>useState with Array Example</h2>\r\n//       <button onClick={handleAdd}>Add Item</button>\r\n\r\n//       <ul style={{ listStyle: \"none\" }}>\r\n//         {items.map((item, index) => (\r\n//           <li key={index}>{item}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ArrayExample;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// function Hero() {\r\n//   const [form, setForm] = useState({ name: \"\", email: \"\" });\r\n\r\n//   const handleSubmit = () => {\r\n//     alert(`Name: ${form.name}, Email: ${form.email}`);\r\n//     setForm({ name: \"\", email: \"\" });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         placeholder=\"Name\"\r\n//         value={form.name}\r\n//         onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n//       />\r\n//       <input\r\n//         placeholder=\"Email\"\r\n//         value={form.email}\r\n//         onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n//       />\r\n//       <button onClick={handleSubmit}>Submit</button>\r\n//       <p>Current State: {JSON.stringify(form)}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");}\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//        <input type=\"text\" placeholder=\"Search Location\" value={city} onChange={(e) => setCity(e.target.value)}/>\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//       {weather && (\r\n//         <div>\r\n//           <h2>{weather.name}</h2>\r\n//           <h4>Temperature: {weather.main.temp}¬∞C</h4>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Weather: {weather.weather[0].description}</h4>\r\n//         </div>\r\n//       )}\r\n//       <p>  ¬© Imax  </p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// // import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   // Function to fetch weather data\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return;\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   //  useEffect runs automatically when 'city' changes\r\n//   useEffect(() => {\r\n//     if (city.trim() !== \"\") {\r\n//       const timer = setTimeout(() => {\r\n//         fetchWeather();\r\n//       }, 800); // delay for better performance (debounce effect)\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [city]); // dependency array\r\n\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//         />\r\n//         {/* We can keep button as optional trigger */}\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//       {weather && (\r\n//         <div>\r\n//           <h2>{weather.name}</h2>\r\n//           <h4>Temperature: {weather.main.temp}¬∞C</h4>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Weather: {weather.weather[0].description}</h4>\r\n//         </div>\r\n//       )}\r\n//       <p>¬© Imax</p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// // import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   // ‚úÖ useEffect: runs every time city changes\r\n//   useEffect(() => {\r\n//     if (city.trim() !== \"\") {\r\n//       console.log(\"Typed City:\", city); // show typed value\r\n//     }\r\n//   }, [city]);\r\n\r\n//   // ‚úÖ fetch weather when button clicked\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//         console.log(\"Fetched Weather Data:\", data); // show API data in console\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//         />\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//       {weather && (\r\n//         <div>\r\n//           <h3>City: {weather.name}</h3>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Temperature: {weather.main.temp}¬∞C</h4>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // üëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëèüëè\r\n// // üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá\r\n// import React, { useState } from \"react\";\r\n\r\n// function InputLogger() {\r\n//   const [text, setText] = useState(\"\"); // Step 1: Create state\r\n\r\n//   const handleClick = () => {\r\n//     console.log(\"User entered:\", text); // Step 3: Log the value to console\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Type something...\"\r\n//                          // Step 2: Bind input to state\r\n//         onChange={(e) => setText(e.target.value)}\r\n//         style={{ padding: \"8px\", width: \"200px\" }}\r\n//       />\r\n//       <button\r\n//         onClick={handleClick}\r\n//         style={{ marginLeft: \"10px\", padding: \"8px 15px\" }}\r\n//       >\r\n//         Log Input\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n// // ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ\r\n// export default InputLogger;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACrC,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,IAAI,EAACC,OAAO,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;;EAEjC;EACA;EACA;EACA;EACA,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpBD,OAAO,CAAC,CAAE,GAAGD,IAAI,EAACF,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAGD,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBAEAV,OAAA;MAAOW,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACC,KAAK,EAAER,IAAK;MAACS,QAAQ,EAAGC,CAAC,IAAGT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGpB,OAAA;MAAQqB,KAAK,EAAE;QAACC,OAAO,EAAC;MAAW,CAAE;MAACC,OAAO,EAAEd,OAAQ;MAAAC,QAAA,EAAE;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElFpB,OAAA;MAAIqB,KAAK,EAAE;QAACG,SAAS,EAACC;MAAC,CAAE;MAAAf,QAAA,EACtBH,IAAI,CAACmB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBACrB5B,OAAA;QAAAU,QAAA,EAAiBiB;MAAI,GAAZC,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eAEH,CAAC;AAEP;AAAChB,EAAA,CA5BQD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA6Bb,eAAeA,IAAI;;AASnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
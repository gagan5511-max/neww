{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MYPC\\\\weatherproject\\\\Frontend\\\\src\\\\component\\\\hero.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");}\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//        <input type=\"text\" placeholder=\"Search Location\" value={city} onChange={(e) => setCity(e.target.value)}/>\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       {weather && (\n//         <div>\n//           <h2>{weather.name}</h2>\n//           <h4>Temperature: {weather.main.temp}Â°C</h4>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Weather: {weather.weather[0].description}</h4>\n//         </div>\n//       )}\n//       <p>  Â© Imax  </p>\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   // Function to fetch weather data\n//   const fetchWeather = async () => {\n//     if (!city) return;\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   // ðŸ‘‡ useEffect runs automatically when 'city' changes\n//   useEffect(() => {\n//     if (city.trim() !== \"\") {\n//       const timer = setTimeout(() => {\n//         fetchWeather();\n//       }, 800); // delay for better performance (debounce effect)\n//       return () => clearTimeout(timer);\n//     }\n//   }, [city]); // dependency array\n\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//         />\n//         {/* We can keep button as optional trigger */}\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//       {weather && (\n//         <div>\n//           <h2>{weather.name}</h2>\n//           <h4>Temperature: {weather.main.temp}Â°C</h4>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Weather: {weather.weather[0].description}</h4>\n//         </div>\n//       )}\n//       <p>Â© Imax</p>\n//     </div>\n//   );\n// }\n// export default Hero;\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./Hero.css\";\n\n// function Hero() {\n//   const [city, setCity] = useState(\"\");\n//   const [weather, setWeather] = useState(null);\n//   const [error, setError] = useState(\"\");\n\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\n\n//   // âœ… useEffect: runs every time city changes\n//   useEffect(() => {\n//     if (city.trim() !== \"\") {\n//       console.log(\"Typed City:\", city); // show typed value\n//     }\n//   }, [city]);\n\n//   // âœ… fetch weather when button clicked\n//   const fetchWeather = async () => {\n//     if (!city) return setError(\"Please enter a city name\");\n\n//     try {\n//       setError(\"\");\n//       const res = await fetch(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n//       );\n//       const data = await res.json();\n\n//       if (res.ok) {\n//         setWeather(data);\n//         console.log(\"Fetched Weather Data:\", data); // show API data in console\n//       } else {\n//         setWeather(null);\n//         setError(\"City not found\");\n//       }\n//     } catch {\n//       setError(\"Error fetching data\");\n//       setWeather(null);\n//     }\n//   };\n\n//   return (\n//     <div id=\"allmain\">\n//       <h1>Weather Data</h1>\n\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search Location\"\n//           value={city}\n//           onChange={(e) => setCity(e.target.value)}\n//         />\n//         <button onClick={fetchWeather}>Get Weather</button>\n//       </div>\n\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//       {weather && (\n//         <div>\n//           <h3>City: {weather.name}</h3>\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\n//           <h4>Temperature: {weather.main.temp}Â°C</h4>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n// export default Hero;\n\nimport { useEffect, useState, useRef } from 'react';\nimport logo from '../assets/cloud.png';\n// import './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Hero() {\n  _s();\n  const inputRef = useRef();\n  const [weather, setWeather] = useState(false);\n  const API_key = \"5b25521fa4ef3ca8b24cbdb1ee5cbf0e\";\n  const search = async city => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_key}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      setWeather({\n        humidity: data.main.humidity,\n        temp: Math.floor(data.main.temp),\n        windspeed: data.wind.speed,\n        location: data.name\n      });\n    } catch (error) {}\n  };\n  useEffect(() => {\n    search(\"New York\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search Location\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      width: \"50\",\n      height: \"50\",\n      onClick: () => search(inputRef.current.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" Wind Speed : \", weather.windspeed, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" Temputure : \", weather.temp, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Humidity:\", weather.humidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"location:\", weather.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(Hero, \"SIW0LNGbru4RUvaGXZnEyVadeRQ=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["useEffect","useState","useRef","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","Hero","_s","inputRef","weather","setWeather","API_key","search","city","url","response","fetch","data","json","console","log","humidity","main","temp","Math","floor","windspeed","wind","speed","location","name","error","children","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","onClick","current","value","_c","$RefreshReg$"],"sources":["C:/Users/MYPC/weatherproject/Frontend/src/component/hero.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");}\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//        <input type=\"text\" placeholder=\"Search Location\" value={city} onChange={(e) => setCity(e.target.value)}/>\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//       {weather && (\r\n//         <div>\r\n//           <h2>{weather.name}</h2>\r\n//           <h4>Temperature: {weather.main.temp}Â°C</h4>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Weather: {weather.weather[0].description}</h4>\r\n//         </div>\r\n//       )}\r\n//       <p>  Â© Imax  </p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// // import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   // Function to fetch weather data\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return;\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   // ðŸ‘‡ useEffect runs automatically when 'city' changes\r\n//   useEffect(() => {\r\n//     if (city.trim() !== \"\") {\r\n//       const timer = setTimeout(() => {\r\n//         fetchWeather();\r\n//       }, 800); // delay for better performance (debounce effect)\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [city]); // dependency array\r\n\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//         />\r\n//         {/* We can keep button as optional trigger */}\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//       {weather && (\r\n//         <div>\r\n//           <h2>{weather.name}</h2>\r\n//           <h4>Temperature: {weather.main.temp}Â°C</h4>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Weather: {weather.weather[0].description}</h4>\r\n//         </div>\r\n//       )}\r\n//       <p>Â© Imax</p>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// // import \"./Hero.css\";\r\n\r\n// function Hero() {\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [weather, setWeather] = useState(null);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const API_KEY = \"50a5754614d571948ae380c6fbb5c9d1\";\r\n\r\n//   // âœ… useEffect: runs every time city changes\r\n//   useEffect(() => {\r\n//     if (city.trim() !== \"\") {\r\n//       console.log(\"Typed City:\", city); // show typed value\r\n//     }\r\n//   }, [city]);\r\n\r\n//   // âœ… fetch weather when button clicked\r\n//   const fetchWeather = async () => {\r\n//     if (!city) return setError(\"Please enter a city name\");\r\n\r\n//     try {\r\n//       setError(\"\");\r\n//       const res = await fetch(\r\n//         `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n//       );\r\n//       const data = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         setWeather(data);\r\n//         console.log(\"Fetched Weather Data:\", data); // show API data in console\r\n//       } else {\r\n//         setWeather(null);\r\n//         setError(\"City not found\");\r\n//       }\r\n//     } catch {\r\n//       setError(\"Error fetching data\");\r\n//       setWeather(null);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div id=\"allmain\">\r\n//       <h1>Weather Data</h1>\r\n\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search Location\"\r\n//           value={city}\r\n//           onChange={(e) => setCity(e.target.value)}\r\n//         />\r\n//         <button onClick={fetchWeather}>Get Weather</button>\r\n//       </div>\r\n\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//       {weather && (\r\n//         <div>\r\n//           <h3>City: {weather.name}</h3>\r\n//           <h4>Wind Speed: {weather.wind.speed} m/s</h4>\r\n//           <h4>Temperature: {weather.main.temp}Â°C</h4>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Hero;\r\n\r\n\r\n\r\nimport { useEffect, useState, useRef} from 'react';\r\nimport logo from '../assets/cloud.png';\r\n// import './App.css';\r\n\r\nfunction Hero() {\r\n\r\n  const inputRef=useRef();\r\n  \r\n const [weather, setWeather]=useState(false);\r\n  const API_key=\"5b25521fa4ef3ca8b24cbdb1ee5cbf0e\";\r\nconst search = async(city)=>{\r\n  try{\r\n\r\nconst url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_key}`;\r\n  const response=await fetch(url);\r\n  const data=await response.json();\r\n  console.log(data);\r\n\r\n  setWeather({\r\n    humidity:data.main.humidity,\r\n    temp:Math.floor(data.main.temp),\r\n    windspeed:data.wind.speed,\r\n    location:data.name\r\n\r\n  })\r\n\r\n}\r\n  catch(error)\r\n  {\r\n\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  search(\"New York\");\r\n},[])\r\n  return (\r\n    <>\r\n        <input  type=\"search\"  placeholder=\"Search Location\" ref={inputRef}/>\r\n        <img src={logo} alt=\"logo\" width=\"50\" height=\"50\" onClick={()=>search(inputRef.current.value)}/>\r\n      \r\n  \r\n        {/* <h2>{weather}</h2> */}\r\n        <h4> Wind Speed : {weather.windspeed} </h4>\r\n        <h4> Temputure : {weather.temp} </h4>\r\n        <h4>Humidity:{weather.humidity}</h4>\r\n         <h4>location:{weather.location}</h4>\r\n         \r\n        </>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAClD,OAAOC,IAAI,MAAM,qBAAqB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAMC,QAAQ,GAACR,MAAM,CAAC,CAAC;EAExB,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAMY,OAAO,GAAC,kCAAkC;EAClD,MAAMC,MAAM,GAAG,MAAMC,IAAI,IAAG;IAC1B,IAAG;MAEL,MAAMC,GAAG,GAAC,qDAAqDD,IAAI,uBAAuBF,OAAO,EAAE;MACjG,MAAMI,QAAQ,GAAC,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC/B,MAAMG,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjBP,UAAU,CAAC;QACTW,QAAQ,EAACJ,IAAI,CAACK,IAAI,CAACD,QAAQ;QAC3BE,IAAI,EAACC,IAAI,CAACC,KAAK,CAACR,IAAI,CAACK,IAAI,CAACC,IAAI,CAAC;QAC/BG,SAAS,EAACT,IAAI,CAACU,IAAI,CAACC,KAAK;QACzBC,QAAQ,EAACZ,IAAI,CAACa;MAEhB,CAAC,CAAC;IAEJ,CAAC,CACC,OAAMC,KAAK,EACX,CAEA;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAI;IACZc,MAAM,CAAC,UAAU,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EACH,oBACET,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACI7B,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAEC,WAAW,EAAC,iBAAiB;MAACC,GAAG,EAAE3B;IAAS;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrEpC,OAAA;MAAKqC,GAAG,EAAEvC,IAAK;MAACwC,GAAG,EAAC,MAAM;MAACC,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,IAAI;MAACC,OAAO,EAAEA,CAAA,KAAIhC,MAAM,CAACJ,QAAQ,CAACqC,OAAO,CAACC,KAAK;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAIhGpC,OAAA;MAAA6B,QAAA,GAAI,gBAAc,EAACvB,OAAO,CAACiB,SAAS,EAAC,GAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CpC,OAAA;MAAA6B,QAAA,GAAI,eAAa,EAACvB,OAAO,CAACc,IAAI,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCpC,OAAA;MAAA6B,QAAA,GAAI,WAAS,EAACvB,OAAO,CAACY,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCpC,OAAA;MAAA6B,QAAA,GAAI,WAAS,EAACvB,OAAO,CAACoB,QAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAEnC,CAAC;AAEX;AAAChC,EAAA,CA9CQD,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AAgDb,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}